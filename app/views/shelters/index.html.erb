<h1>避難所一覧</h1>

<%= link_to 'Download Shelters CSV', download_shelters_path, class: 'btn btn-primary' %>

<%# ボタンと表示エリアを追加 %>
<button id="show-nearby-shelters">近くの避難所を表示</button>
<div id="shelter-list"></div>

<%# スクリプトを追加 %>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // CSVファイルのパスを指定
    fetch('<%= asset_path('shelters.csv') %>') 
      .then(response => response.text())
      .then(data => {
        const shelters = parseCSV(data); // CSVを解析する関数を呼び出す
        
        // 近くの避難所表示ボタンのクリックイベントを設定
        document.getElementById('show-nearby-shelters').addEventListener('click', () => {
          navigator.geolocation.getCurrentPosition(position => {
            const userLat = position.coords.latitude;
            const userLng = position.coords.longitude;

            // 10km以内の避難所をフィルタリング
            const nearbyShelters = shelters.filter(shelter => {
              const shelterLat = parseFloat(shelter.latitude);
              const shelterLng = parseFloat(shelter.longitude);
              const distance = haversineDistance(userLat, userLng, shelterLat, shelterLng);
              return distance <= 10; // 10km以内の避難所のみ
            });

            // フィルタされた避難所を表示
            displayShelters(nearbyShelters);
          });
        });
      });
  });

  // CSVを解析する関数
  function parseCSV(data) {
    const lines = data.split('\n');
    const headers = lines[0].split(',');

    return lines.slice(1).map(line => {
      const values = line.split(',');
      const shelter = {};
      headers.forEach((header, index) => {
        shelter[header.trim()] = values[index] ? values[index].trim() : null;
      });
      return shelter;
    });
  }

  // 近くの避難所を表示する関数
  function displayShelters(shelters) {
    const shelterList = document.getElementById('shelter-list');
    shelterList.innerHTML = ''; // 以前のリストをクリア

    // 近くの避難所を3件表示
    const nearbyShelters = shelters.slice(0, 3);
    nearbyShelters.forEach(shelter => {
      const shelterItem = document.createElement('div');
      shelterItem.textContent = `${shelter.facility_name} - ${shelter.address}`;
      shelterList.appendChild(shelterItem);
    });
  }

  // ハーバシン距離計算の関数
  function haversineDistance(lat1, lon1, lat2, lon2) {
    const R = 6371; // 地球の半径（キロメートル）
    const dLat = (lat2 - lat1) * Math.PI / 180;
    const dLon = (lon2 - lon1) * Math.PI / 180;
    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
              Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
              Math.sin(dLon/2) * Math.sin(dLon/2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
    return R * c; // 距離を返す
  }
</script>